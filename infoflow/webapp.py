"""This module creates the `FastHTML` webapplication and starts the server."""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/03_create_webapp.ipynb.

# %% auto 0
__all__ = ['dict_svgnodes', 'add_onclick_to_nodes']

# %% ../nbs/03_create_webapp.ipynb 3
import re
import xml.etree.ElementTree as ET
from pprint import pprint
from fastcore.test import *
from fasthtml.common import *
from monsterui.all import *

from hopsa import ossys

from .classdb import *
from .creinst import *
from .viz import *

# %% ../nbs/03_create_webapp.ipynb 18
def dict_svgnodes(svg_str: str):
   # Remove all xmlns declarations to get rid of namespace declaration when using .findall
   cln_svg = re.sub(r'xmlns[^=]*="[^"]*"', '', svg_str)
   root = ET.fromstring(cln_svg)

   nodes = {}

   for g in root.findall(".//g[@class='node']"):
      nte = g.find('title')
      nt = nte.text if nte is not None else None
      ni = g.get('id')
      nc = g.get('class')

      # I assume every element only has one polygon
      nfc = g.find('polygon').get('fill')
      nsc = g.find('polygon').get('stroke')

      # Text can have multiple lines
      nts = [t.text for t in g.findall('text')]
    
      nodes[nt] = {
         'id': ni,
         'class': nc,
         'fill': nfc,
         'stroke': nsc,
         'text': nts
         }

   return nodes

# %% ../nbs/03_create_webapp.ipynb 22
def add_onclick_to_nodes(svg_str: str):
    # Get node information
    nodes = dict_svgnodes(svg_str)
    
    # Add onclick to each Tool-node's <g> element
    for n, d in nodes.items():
        node_id = d['id']
        if d['fill'] != 'none': # Skip all info-items
            tool_phase = n.split('_')
            tool = ossys.sanitize_name(tool_phase[0])
            phase = ossys.sanitize_name(tool_phase[1])
            onclick_attr = f'onclick="htmx.ajax(\'GET\', \'/tool?slug={tool}\', {{target: \'#main-content\', swap: \'outerHTML\'}})"'
        if d['fill'] == 'none': # Get all info-items
            name_split = n.split('_')
            resource = n.split('_')[1:] # remove the "source" part of the name
            resource = '_'.join(resource)
            resource = ossys.sanitize_name(resource)
            onclick_attr = f'onclick="htmx.ajax(\'GET\', \'/resource?slug={resource}\', {{target: \'#main-content\', swap: \'outerHTML\'}})"'
        
        # Replace the <g> tag to add onclick
        old_pattern = f'<g id="{node_id}" class="node">'
        new_pattern = f'<g id="{node_id}" class="node" {onclick_attr}>'
        svg_str = svg_str.replace(old_pattern, new_pattern)
    
    return svg_str

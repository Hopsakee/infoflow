"""This module creates the different instances. In this module you can change the description of Tools, the flow of InformationItems. Add Tools and add InformationItems."""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_create_instances.ipynb.

# %% auto 0
__all__ = ['tools_from_code', 'informationitems_from_code', 'db_from_instanes']

# %% ../nbs/01_create_instances.ipynb 4
from fasthtml.common import *
from .classdb import *

# %% ../nbs/01_create_instances.ipynb 7
def tools_from_code():
    """Create all Tool instances as defined in the code."""
    reader = Tool(
        id=101,
        name="Reader",
        organization_system=[OrganizationSystem.TAGS],
        phase_quality=PhaseQualityData(
            collect=PhaseQuality.GREAT,
            retrieve=PhaseQuality.BAD,
            consume=PhaseQuality.GREAT,
        )
    )

    recall = Tool(
        id=102,
        name="Recall",
        organization_system=[OrganizationSystem.LINKS],
        phase_quality=PhaseQualityData(
            collect=PhaseQuality.GREAT,
            retrieve=PhaseQuality.GREAT,
            consume=PhaseQuality.NA,
            extract=PhaseQuality.NA,
            refine=PhaseQuality.GREAT
        )
    )

    readwise = Tool(
        id=103,
        name="Readwise",
        organization_system=[OrganizationSystem.TAGS],
        phase_quality=PhaseQualityData(
            collect=PhaseQuality.NA,
            retrieve=PhaseQuality.OK,
            consume=PhaseQuality.NA,
            extract=PhaseQuality.GREAT,
            refine=PhaseQuality.OK
        )
    )

    obsidian = Tool(
        id=104,
        name="Obsidian",
        organization_system=[OrganizationSystem.JOHNNY_DECIMAL, OrganizationSystem.LINKS],
        phase_quality=PhaseQualityData(
            collect=PhaseQuality.NA,
            retrieve=PhaseQuality.OK,
            consume=PhaseQuality.OK,
            extract=PhaseQuality.GREAT,
            refine=PhaseQuality.GREAT
        )
    )

    librarything = Tool(
        id=105,
        name="LibraryThing",
        organization_system=[OrganizationSystem.TAGS],
        phase_quality=PhaseQualityData(
            collect=PhaseQuality.OK,
            retrieve=PhaseQuality.BAD,
            consume=PhaseQuality.NA,
            extract=PhaseQuality.NA,
            refine=PhaseQuality.NA
        )
    )

    snipd = Tool(
        id=106,
        name="Snipd",
        organization_system=[OrganizationSystem.FOLDERS],
        phase_quality=PhaseQualityData(
            collect=PhaseQuality.OK,
            retrieve=PhaseQuality.BAD,
            consume=PhaseQuality.GREAT,
            extract=PhaseQuality.NA,
            refine=PhaseQuality.NA
        )
    )

    neoreader = Tool(
        id=107,
        name="NeoReader",
        organization_system=[OrganizationSystem.FOLDERS],
        phase_quality=PhaseQualityData(
            collect=PhaseQuality.OK,
            retrieve=PhaseQuality.BAD,
            consume=PhaseQuality.GREAT,
            extract=PhaseQuality.NA,
            refine=PhaseQuality.NA
        )
    )

    youtube = Tool(
        id=108,
        name="YouTube",
        organization_system=[OrganizationSystem.FOLDERS],
        phase_quality=PhaseQualityData(
            collect=PhaseQuality.OK,
            retrieve=PhaseQuality.BAD,
            consume=PhaseQuality.OK,
            extract=PhaseQuality.NA,
            refine=PhaseQuality.NA
        )
    )


# %% ../nbs/01_create_instances.ipynb 12
def informationitems_from_code():
    """Create all InformationItem instances as defined in the code."""
    web_article_item = InformationItem(
        id=201,
        name="Web Article",
        info_type=InformationType.WEB_ARTICLE,
        method=PhaseMethodData(
            collect=Method.MANUAL
        ),
        toolflow=PhaseToolflowData(
            collect=("Reader", "Recall"),
            retrieve="Recall",
            consume="Reader"
        )
    )

    annotation_item = InformationItem(
        id=202,
        name="Annotation",
        info_type=InformationType.ANNOTATION,
        method=PhaseMethodData(
            collect=Method.AUTOMATIC
        ),
        toolflow=PhaseToolflowData(
            extract="Readwise",
            refine=("Recall", "Obsidian")
        )
    )

    note_item = InformationItem(
        id=203,
        name="Note",
        info_type=InformationType.NOTE,
        method=PhaseMethodData(
            collect=Method.MANUAL
        ),
        toolflow=PhaseToolflowData(
            retrieve="Obsidian",
            consume="Obsidian",
            extract="Obsidian",
            refine="Obsidian"
        )
    )

    book_item = InformationItem(
        id=204,
        name="Book",
        info_type=InformationType.BOOK,
        method=PhaseMethodData(
            collect=Method.MANUAL
        ),
        toolflow=PhaseToolflowData(
            collect="LibraryThing",
            retrieve="LibraryThing",
            consume="NeoReader",
            extract="Readwise",
            refine="Obsidian"
        )
    )

    podcast_item = InformationItem(
        id=205,
        name="Podcast",
        info_type=InformationType.PODCAST,
        method=PhaseMethodData(
            collect=Method.AUTOMATIC
        ),
        toolflow=PhaseToolflowData(
            collect="Snipd",
            retrieve="Snipd",
            consume="Snipd",
            extract="Readwise",
            refine="Obsidian"
        )
    )

    research_paper_item = InformationItem(
        id=206,
        name="Research Paper",
        info_type=InformationType.RESEARCH_PAPER,
        method=PhaseMethodData(
            collect=Method.MANUAL
        ),
        toolflow=PhaseToolflowData(
            collect=("Recall", "NeoReader"),
            retrieve=("Recall", "NeoReader"),
            consume="NeoReader",
            extract="Readwise",
            refine=("Obsidian", "Recall")
        )
    )

    document_item = InformationItem(
        id=207,
        name="Document",
        info_type=InformationType.DOCUMENT,
        method=PhaseMethodData(
            collect=Method.MANUAL
        ),
        toolflow=PhaseToolflowData(
            collect="NeoReader",
            retrieve="NeoReader",
            consume="NeoReader",
            extract="Readwise",
            refine=("Obsidian", "Recall")
        )
    )

    youtube_video_item = InformationItem(
        id=208,
        name="YouTube Video",
        info_type=InformationType.YOUTUBE_VIDEO,
        method=PhaseMethodData(
            collect=Method.AUTOMATIC
        ),
        toolflow=PhaseToolflowData(
            collect="YouTube",
            retrieve="YouTube",
            consume="YouTube",
            extract="Obsidian",
            refine="Obsidian"
        )
    )

    web_article_item = InformationItem(
        id=209,
        name="Web Article",
        info_type=InformationType.WEB_ARTICLE,
        method=PhaseMethodData(
            collect=Method.MANUAL
        ),
        toolflow=PhaseToolflowData(
            collect=("Reader", "Recall"),
            retrieve="Recall",
            consume="Reader"
        )
    )

# %% ../nbs/01_create_instances.ipynb 18
def db_from_instanes(
    db_loc: Path = "../data/infoflow.db", # Location of the database, usually "../data/infoflow.db"
    toolclass: Tool = Tool, # De Tool dataclass, containing all the tool intances
    informationitemclass: InformationItem = InformationItem, # The InformationItem dataclass, containing all the information item instances
    ) -> None:
    """Create a fresh database filled with all the instances created in this notebook."""
    db = create_db(db_loc)
    create_tables_from_pydantic(db, [Tool, InformationItem, Improvement])
    tools_from_code()
    informationitems_from_code()
    for t in toolclass.get_instances().values(): db.t.tools.insert(t.flatten_for_db())
    for i in informationitemclass.get_instances().values(): db.t.information_items.insert(i.flatten_for_db())
    db.close()
